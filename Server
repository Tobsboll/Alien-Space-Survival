
with Ada.Text_IO;                  use Ada.Text_IO;
with Ada.Integer_Text_IO;          use Ada.Integer_Text_IO;
with Ada.Command_Line;             use Ada.Command_Line;
with TJa.Sockets;                  use TJa.Sockets;
  



procedure Server is
   
   type Socket_Array is
     array (1..4) of Socket_Type;
   
   
   Socket1, Socket2, Socket3, Socket4 : Socket_Type;
   Sockets : Socket_Array             := (Socket1, Socket2, Socket3, Socket4);
   Listener                           : Listener_Type;
   Num_Players                        : Integer;
   Keyboard_Input                     : Character;
   
   --------------------------------------------------
   type X_Led is array(1 .. 62) of Character;
   type World is array(1 .. 30) of X_Led;
   
   type XY_Type is array(1 .. 2) of Integer;
   type Shot_Type is array (1 .. 5) of XY_Type;
   
   type Ship_spec is 
      record
  	 XY      : XY_Type; 
  	 Lives   : Integer; 
  	 S       : Shot_Type;
      end record;
   
   type Player_Type is
      record
  	 Playing    : Boolean;
  	 Name       : String(1..24);
  	 NameLength : Integer;
  	 Ship       : Ship_Spec;
  	 Score      : Integer;
      end record;
   
   type Enemies is array (1 .. 50) of Ship_Spec;
   
   type Game_Data is
      record
  	 Layout   : World;
  	 Player_1 : Player_Type;
  	 Player_2 : Player_Type;
  	 Player_3 : Player_Type;
  	 Player_4 : Player_Type;
  	 Wave     : Enemies;
      end record; 
   --------------------------------------------------
   
   
   
   --------------------------------------------------
   
   --------------------------------------------------
   procedure Add_Player(Listener : in Listener_Type;
			Socket   : in out Socket_Type;
		        Player_Num : in integer) is
      
   begin
      
      Wait_For_Connection(Listener, Socket);
      
      Put("Player ");
      Put(Player_Num, 0);
      Put(" joined the game.");
      New_Line;
      
   end Add_Player;
   --------------------------------------------------
   
   --------------------------------------------------
   procedure Remove_Player(Socket     : in out Socket_Type; 
			   Player_Num : in Integer) is
      
   begin
      
      Close(Socket);
      
      New_Line;
      Put("Player ");
      Put(Player_Num, 0);
      Put(" has left the game");
      
   
   end Remove_Player;
   --------------------------------------------------
   
   --------------------------------------------------
   procedure Update_Enemies is
      
   begin -- procedure som tar input och uppdaterar 
      
      null;
      
   end Update_Enemies;
   --------------------------------------------------
   
--   Game_Data : Game_Type;
   
begin
   
   -- "öppna dörren". För tillfället endast lokalt, ändra sedan.
   Initiate(Listener, Integer'Value(Argument(1)), Localhost => true);
   
   Put_Line("Servern är igång, väntar på connection");
   -- vänta på spelare 1
   -- Wait_For_Connection(Listener, Socket1);
   Add_Player(Listener, Sockets(1), 1);
   
   Get(Sockets(1), Num_Players); -- vänta in att spelare ett bestämmer hur många som ska spela.
   
   
   Put_line("Waiting for players...");
   
   
   -- lägg till wait_for_connections för så många spelare som angetts!
   for I in 2..Num_Players loop
      
      Add_Player(Listener, Sockets(I), I);
      
   end loop;
   
   New_Line;
   Put("All players have joined the game.");
   
   
   -- Skicka ut ett tecken till alla klienterna, så att de slutar vänta och börjar sin loop.

   
   -- Nu kan själva spelet börja!
   
   
   
   
   -- loop som plockar input från alla spelare och filtrerar den.


 
   
   
   -- Update_Enemies;
   
   for J in 1..Num_Players loop
      
      Put_Line(Sockets(J), Num_Players);
      
   end loop;
   
   Put("Spelet är igång!");
   Skip_Line;
   
   loop
   --------------------------------------------------
   for I in 1..Num_Players loop
      
      Get(Sockets(I), Keyboard_Input); -- får alltid något, minst ett 'o'
      Skip_Line;
      
      if Keyboard_Input /= 'o' then
	 
	 Put("Player ");
	 Put(I);
	 Put(" pressed: ");
	 
	 if Keyboard_Input = 'w' then Put("Up Arrow");
	 elsif Keyboard_Input = 's' then Put("Down arrow");
	 elsif Keyboard_Input = 'a' then Put("Left arrow");
	 elsif Keyboard_Input = 'd' then Put("Right arrow");
	 elsif Keyboard_input = ' ' then Put("Fire"); 	
	 elsif Keyboard_Input = 'e' then exit; -- betyder "ingen input" för servern.
	 end if;
      end if;
      
   end loop;
   --------------------------------------------------
   end loop;
   
   --Efter spelets slut.
   
   for I in 1..Num_Players loop
      
      Remove_Player(Sockets(I), I);
      
   end loop; 
   

end Server;
